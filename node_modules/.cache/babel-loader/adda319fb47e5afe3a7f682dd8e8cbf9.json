{"ast":null,"code":"var _jsxFileName = \"/Users/albertpark/Documents/BCS Summer 2019/CPSC439I/Todo-List-Application/vReact/src/components/Todo.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\n\nconst Todo = ({\n  todos,\n  deleteTodo,\n  handleHover\n}) => {\n  handleClick = id => {\n    this.props.deletePost(id);\n  };\n\n  const todoList = todos.length ? todos.map(todoEntry => {\n    return React.createElement(\"div\", {\n      className: \"todoEntry\",\n      key: todoEntry.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onHover: () => {\n        handleHover(todoEntry.description);\n      },\n      onClick: () => {\n        deleteTodo(() => {\n          this.handleClick(todoEntry.id);\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, todoEntry.todo)));\n  }) : React.createElement(\"div\", {\n    className: \"emptyTodo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Your list is empty\"));\n  return React.createElement(\"div\", {\n    className: \"todoList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, todoList);\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTodo: id => {\n      dispatch({\n        type: 'DELETE_POST',\n        id: id\n      });\n    }\n  };\n};\n\nexport default connect(mapDispatchToProps)(Todo);","map":{"version":3,"sources":["/Users/albertpark/Documents/BCS Summer 2019/CPSC439I/Todo-List-Application/vReact/src/components/Todo.js"],"names":["React","connect","Todo","todos","deleteTodo","handleHover","handleClick","id","props","deletePost","todoList","length","map","todoEntry","description","todo","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA;AAApB,CAAD,KAAsC;AAE/CC,EAAAA,WAAW,GAAIC,EAAD,IAAQ;AACpB,SAAKC,KAAL,CAAWC,UAAX,CAAsBF,EAAtB;AACD,GAFD;;AAIA,QAAMG,QAAQ,GAAIP,KAAK,CAACQ,MAAN,GAChBR,KAAK,CAACS,GAAN,CAAUC,SAAS,IAAI;AACrB,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEA,SAAS,CAACN,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM;AAAK,MAAA,OAAO,EAAE,MAAM;AAAEF,QAAAA,WAAW,CAACQ,SAAS,CAACC,WAAX,CAAX;AAAoC,OAA1D;AACK,MAAA,OAAO,EAAE,MAAM;AAAEV,QAAAA,UAAU,CAAC,MAAM;AAAC,eAAKE,WAAL,CAAiBO,SAAS,CAACN,EAA3B;AAA+B,SAAvC,CAAV;AAAoD,OAD1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACDM,SAAS,CAACE,IADT,CAFF,CADN,CADF;AAWD,GAZD,CADgB,GAehB;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CAfF;AAoBA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,QADL,CADF;AAKH,CA/BD;;AAiCA,MAAMM,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLb,IAAAA,UAAU,EAAGG,EAAD,IAAQ;AAAEU,MAAAA,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE,aAAP;AAAsBX,QAAAA,EAAE,EAAEA;AAA1B,OAAD,CAAR;AAAwC;AADzD,GAAP;AAGD,CAJD;;AAOA,eAAeN,OAAO,CAACe,kBAAD,CAAP,CAA4Bd,IAA5B,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux'\n\nconst Todo = ({todos, deleteTodo, handleHover}) => {\n\n    handleClick = (id) => {\n      this.props.deletePost(id);\n    }\n\n    const todoList =  todos.length ? (\n      todos.map(todoEntry => {\n        return (\n          <div className=\"todoEntry\" key={todoEntry.id}>\n                <div onHover={() => { handleHover(todoEntry.description) }}\n                     onClick={() => { deleteTodo(() => {this.handleClick(todoEntry.id)}) } }>\n                  <p>\n                {todoEntry.todo}\n                  </p>\n                </div>\n\n          </div>\n        )\n      })\n    ) : (\n      <div className=\"emptyTodo\">\n        <p>Your list is empty</p>\n      </div>\n    );\n\n    return (\n      <div className=\"todoList\">\n         { todoList }\n      </div>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deleteTodo: (id) => { dispatch({type: 'DELETE_POST', id: id})}\n  }\n}\n\n\nexport default connect(mapDispatchToProps)(Todo);\n"]},"metadata":{},"sourceType":"module"}