{"ast":null,"code":"var _jsxFileName = \"/Users/albertpark/Documents/BCS Summer 2019/CPSC439I/Todo-List-Application/vReact/src/components/InputForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass InputForm extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      id: \"tasklist\",\n      className: \"tasklist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"InputForm\",\n      onSubmit: this.addTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      autoComplete: \"off\",\n      id: \"textform\",\n      onChange: () => {\n        this.handleChange(this.text);\n      },\n      placeholder: \"Leave a message for yourself\",\n      value: this.text,\n      onSubmit: this.clearform,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Save\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  console.log(\"Hi\");\n  return {\n    newText: text => {\n      dispatch({\n        type: 'UPDATE_TEXT',\n        text: text\n      });\n    }\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    text: state.text\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm);","map":{"version":3,"sources":["/Users/albertpark/Documents/BCS Summer 2019/CPSC439I/Todo-List-Application/vReact/src/components/InputForm.js"],"names":["React","Component","connect","InputForm","render","addTodo","handleChange","text","clearform","mapDispatchToProps","dispatch","console","log","newText","type","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAE9BG,EAAAA,MAAM,GAAG;AACL,WACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAmB,MAAA,SAAS,EAAC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,EAAE,EAAC,WAAT;AAAqB,MAAA,QAAQ,EAAE,KAAKC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,YAAY,EAAC,KAFf;AAGE,MAAA,EAAE,EAAC,UAHL;AAIE,MAAA,QAAQ,EAAE,MAAM;AAAC,aAAKC,YAAL,CAAkB,KAAKC,IAAvB;AAA6B,OAJhD;AAKE,MAAA,WAAW,EAAC,8BALd;AAME,MAAA,KAAK,EAAE,KAAKA,IANd;AAOE,MAAA,QAAQ,EAAE,KAAKC,SAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,EAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXA,EAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZA,CADJ,CADF;AAiBL;;AApB+B;;AAuBlC,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,SAAO;AACLC,IAAAA,OAAO,EAAGN,IAAD,IAAU;AAAEG,MAAAA,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE,aAAP;AAAsBP,QAAAA,IAAI,EAAEA;AAA5B,OAAD,CAAR;AAA4C;AAD5D,GAAP;AAGD,CALD;;AAOA,MAAMQ,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLT,IAAAA,IAAI,EAAES,KAAK,CAACT;AADP,GAAP;AAGD,CAJD;;AAMA,eAAeL,OAAO,CAACa,eAAD,EAAkBN,kBAAlB,CAAP,CAA6CN,SAA7C,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\n\nclass InputForm extends Component {\n\n    render() {\n        return (\n          <div id=\"tasklist\" className=\"tasklist\">\n              <form id=\"InputForm\" onSubmit={this.addTodo}>\n                <input\n                  type=\"text\"\n                  autoComplete=\"off\"\n                  id=\"textform\"\n                  onChange={() => {this.handleChange(this.text)}}\n                  placeholder=\"Leave a message for yourself\"\n                  value={this.text}\n                  onSubmit={this.clearform}\n                />\n                <button className=\"button\">Save</button>\n              <br />\n              <br />\n            </form>\n          </div>)\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  console.log(\"Hi\");\n  return {\n    newText: (text) => { dispatch({type: 'UPDATE_TEXT', text: text})}\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    text: state.text\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputForm)\n"]},"metadata":{},"sourceType":"module"}