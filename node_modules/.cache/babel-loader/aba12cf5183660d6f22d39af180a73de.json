{"ast":null,"code":"var _jsxFileName = \"/Users/albertpark/Documents/BCS Summer 2019/CPSC439I/Todo-List-Application/vReact/src/components/Todo.js\";\nimport React from \"react\";\nimport Popup from \"reactjs-popup\";\n\nconst Todo = ({\n  todos,\n  deleteTodo,\n  handleHover\n}) => {\n  const todoList = todos.length ? todos.map(todoEntry => {\n    return React.createElement(\"div\", {\n      className: \"todoEntry\",\n      key: todoEntry.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onHover: () => {\n        handleHover(todoEntry.description);\n      },\n      onClick: () => {\n        deleteTodo(todoEntry.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, todoEntry.todo)));\n  }) : React.createElement(\"div\", {\n    className: \"emptyTodo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Your list is empty\"));\n  return React.createElement(\"div\", {\n    className: \"todoList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, todoList);\n};\n\nexport default Todo;","map":{"version":3,"sources":["/Users/albertpark/Documents/BCS Summer 2019/CPSC439I/Todo-List-Application/vReact/src/components/Todo.js"],"names":["React","Popup","Todo","todos","deleteTodo","handleHover","todoList","length","map","todoEntry","id","description","todo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,UAAR;AAAoBC,EAAAA;AAApB,CAAD,KAAsC;AAE/C,QAAMC,QAAQ,GAAIH,KAAK,CAACI,MAAN,GAChBJ,KAAK,CAACK,GAAN,CAAUC,SAAS,IAAI;AACrB,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEA,SAAS,CAACC,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,OAAO,EAAE,MAAM;AAAEL,QAAAA,WAAW,CAACI,SAAS,CAACE,WAAX,CAAX;AAAoC,OAA1D;AACK,MAAA,OAAO,EAAE,MAAM;AAAEP,QAAAA,UAAU,CAACK,SAAS,CAACC,EAAX,CAAV;AAA0B,OADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAECD,SAAS,CAACG,IAFX,CADF,CADJ,CADF;AAUD,GAXD,CADgB,GAchB;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CAdF;AAmBA,SACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,QADL,CADF;AAKH,CA1BD;;AA4BA,eAAeJ,IAAf","sourcesContent":["import React from \"react\";\nimport Popup from \"reactjs-popup\";\n\nconst Todo = ({todos, deleteTodo, handleHover}) => {\n\n    const todoList =  todos.length ? (\n      todos.map(todoEntry => {\n        return (\n          <div className=\"todoEntry\" key={todoEntry.id}>\n              <p>\n                <div onHover={() => { handleHover(todoEntry.description) }}\n                     onClick={() => { deleteTodo(todoEntry.id) } }>\n                {todoEntry.todo}\n                </div>\n              </p>\n          </div>\n        )\n      })\n    ) : (\n      <div className=\"emptyTodo\">\n        <p>Your list is empty</p>\n      </div>\n    );\n\n    return (\n      <div className=\"todoList\">\n         { todoList }\n      </div>\n    );\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}